C51 COMPILER V9.60.0.0   MAIN                                                              10/23/2021 17:03:05 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Out_File\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\USER\src\main.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Libr
                    -aries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\USER\inc;..\USER\src;..\CODE) 
                    -DEBUG PRINT(.\Out_File\main.lst) TABS(2) OBJECT(.\Out_File\main.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          main
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ790875685)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Target core   STC8H8K64S4
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2020-06-01
  18           *********************************************************************************************************
             -***********/
  19          
  20          #include "headfile.h"
  21          #define DIR P35
  22          #define PWM_FREQ_MAX 2500
  23          //board.h文件中FOSC的值设置为0,则程序自动识别系统频率
  24          
  25          /*board.h文件中FOSC的值设置不为0，则系统频率为FOSC的值，
  26          在使用stc-isp工具下载程序的时候需要将IRC频率设置为FOSC的值*/
  27          
  28          /*在board_init中,已经将P54引脚设置为复位，
  29          如果需要使用P54引脚,可以在board.c文件中的board_init()函数中删除SET_P54_RESRT即可*/
  30          
  31          float kp, kd, ki;
  32          int16 duty,dataFrame[1], timeElapsed, previousError, integral, error, increment,target, measuredValue, out
             -put,thresholdValue;
  33          
  34          void vcan_sendware(void *wareaddr, uint32 waresize)
  35          {
  36   1      #define VCAN_PORT UART_1
  37   1      #define CMD_WARE     3
  38   1      
  39   1          int16 i, tem;
  40   1          uint8 cmdf[2] = {CMD_WARE, ~CMD_WARE};
  41   1          uint8 cmdr[2] = {~CMD_WARE, CMD_WARE};
  42   1      
  43   1          for (i = 0; i < waresize; i += 2)
  44   1          {
  45   2              tem = ((uint8 *) wareaddr)[i];
  46   2              ((uint8 *) wareaddr)[i] = ((uint8 *) wareaddr)[i + 1];
  47   2              ((uint8 *) wareaddr)[i + 1] = tem;
  48   2          }
  49   1          uart_putbuff(VCAN_PORT, cmdf, sizeof(cmdf));
  50   1          uart_putbuff(VCAN_PORT, (uint8 *) wareaddr, waresize);
C51 COMPILER V9.60.0.0   MAIN                                                              10/23/2021 17:03:05 PAGE 2   

  51   1          uart_putbuff(VCAN_PORT, cmdr, sizeof(cmdr));
  52   1      }
  53          
  54          int abs(int number){
  55   1          return number>0?number:-number;
  56   1      }
  57          
  58          int beta(){
  59   1          double error = target - measuredValue;
  60   1          return thresholdValue>abs(error)?0:1;
  61   1      }
  62          
  63          
  64          void PID_Controller()
  65          {
  66   1        error = target - measuredValue;
  67   1        integral += error;
  68   1        increment = kp * error +beta() * ki * integral + kd * (error - previousError) / timeElapsed;
  69   1        output = measuredValue + increment;
  70   1        previousError = error;
  71   1      }
  72          
  73          void PID_Init()
  74          {
  75   1        //Only for Test use
  76   1        timeElapsed = 1;
  77   1        measuredValue = 0;
  78   1        target = 875;
  79   1        kp = 0.6;
  80   1        ki = 0.1;
  81   1        kd = 0.1;
  82   1        thresholdValue = 200;
  83   1        //Test End
  84   1      
  85   1        previousError = 0;
  86   1        integral = 0;
  87   1        output = 0;
  88   1        error=0;
  89   1        increment=0;
  90   1      }
  91          
  92          void main()
  93          {
  94   1        DisableGlobalIRQ(); //关闭总中断
  95   1        board_init();   //初始化内部寄存器，勿删除此句代码。
  96   1      
  97   1        //此处编写用户代码(例如：外设初始化代码等)
  98   1        pwm_init(PWM4P_P66, 10000, 0);
  99   1        ctimer_count_init(CTIM0_P34);
 100   1      
 101   1        EnableGlobalIRQ(); //开启总中断
 102   1        PID_Init();
 103   1        while (1)
 104   1        {
 105   2          P45 = 0;
 106   2          if(DIR == 1)
 107   2          {
 108   3            measuredValue = -ctimer_count_read(CTIM0_P34);
 109   3          }
 110   2          else
 111   2          {
 112   3            measuredValue = ctimer_count_read(CTIM0_P34);
C51 COMPILER V9.60.0.0   MAIN                                                              10/23/2021 17:03:05 PAGE 3   

 113   3          }
 114   2          ctimer_count_clean(CTIM0_P34);
 115   2          PID_Controller();
 116   2          duty=(int)(2.291*output+369.54);
 117   2          if(duty>=PWM_FREQ_MAX){
 118   3            duty=PWM_FREQ_MAX;
 119   3          }
 120   2          
 121   2          pwm_duty(PWM4P_P66,duty);
 122   2          dataFrame[0]=measuredValue;
 123   2          //printf("%d,%d\n",output,measuredValue);
 124   2          vcan_sendware(dataFrame,sizeof(dataFrame));
 125   2          //measuredValue=output;
 126   2          delay_ms(timeElapsed*100);
 127   2        }
 128   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    928    ----
   CONSTANT SIZE    =      4    ----
   XDATA SIZE       =     34      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
